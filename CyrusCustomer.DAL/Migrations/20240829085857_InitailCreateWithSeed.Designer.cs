// <auto-generated />
using System;
using CyrusCustomer.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CyrusCustomer.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240829085857_InitailCreateWithSeed")]
    partial class InitailCreateWithSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CyrusCustomer.Domain.Models.Branche", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("CyrusCustomer.Models.Credential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Email = "admin@Cyrus.com",
                            Name = "admin",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            Email = "tony@Cyrus.com",
                            Name = "tony",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            Email = "mahmoud@Cyrus.com",
                            Name = "mahmoud",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            Email = "mina@examCyrusple.com",
                            Name = "mina",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 1,
                            Email = "mohamad@Cyrus.com",
                            Name = "mohamad",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 1,
                            Email = "amro@Cyrus.com",
                            Name = "amro",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 2,
                            Email = "youssef@Cyrus.com",
                            Name = "youssef",
                            Password = "Cyrus@2024"
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 2,
                            Email = "sameh@Cyrus.com",
                            Name = "sameh",
                            Password = "Cyrus@2024"
                        });
                });

            modelBuilder.Entity("CyrusCustomer.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cyrus Technology A",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cyrus Technology B",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CyrusCustomer.Domain.Models.Branche", b =>
                {
                    b.HasOne("CyrusCustomer.Models.Customer", "Customer")
                        .WithMany("Branches")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CyrusCustomer.Models.Credential", b =>
                {
                    b.HasOne("CyrusCustomer.Models.Customer", "Customer")
                        .WithMany("Credentials")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CyrusCustomer.Models.Customer", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Credentials");
                });
#pragma warning restore 612, 618
        }
    }
}
